{"version":3,"sources":["pages/Home.jsx","auth/UserContext.jsx","auth/withUser.jsx","components/NavMain.jsx","api/apiHandler.js","components/Forms/FormSignin.jsx","components/Forms/FormSignup.jsx","snippets/SnippetCard.jsx","utils/buildFormData.jsx","snippets/UpdateSnippet.jsx","pages/AddSnippet.jsx","pages/Profile.jsx","utils/ProtectedRoute.jsx","App.jsx","reportWebVitals.js","auth/UserProvider.jsx","index.js"],"names":["Home","props","UserContext","React","createContext","withUser","ComponentToPassUserContextTo","Consumer","context","toggleFormDisplay","className","exact","to","isLoggedIn","Fragment","user","userName","onClick","removeUser","service","axios","create","baseURL","process","withCredentials","errorHandler","error","response","console","log","data","message","apiHandler","signup","userInfo","post","then","res","catch","signin","get","logout","getSnippets","getSnippet","id","updateUser","patch","getUserInfos","removeSnippet","snippetId","delete","updateSnippet","getUserSnippets","addSnippet","state","email","password","handleChange","event","value","target","key","name","setState","handleSubmit","preventDefault","setUser","this","autoComplete","onSubmit","htmlFor","onChange","type","Component","role","aria-label","SnippetCard","picture","title","_id","category","description","snippet","credits","handleDelete","src","alt","secondary","buildFormData","formData","parentKey","Date","File","append","Object","keys","forEach","tempPictureUrl","snippetUpdated","updateRef","createRef","files","handlePreview","file","fakeUrl","URL","createObjectURL","FormData","current","match","params","creator","style","width","height","placeholder","ref","primary","initialState","snippetAdded","httpResponse","pictureRef","fd","handleClose","disabled","selectedSnippet","userSnippets","deleteSnippet","filter","onSnippetSelect","find","onEditFormClose","handleSnippetUpdate","map","Promise","all","allPromises","userInfos","onSnippetUpdate","displayForm","AddSnippet","handleFormClose","href","LinkedIn","GitHub","length","index","ProtectedRoute","component","render","rest","isLoading","App","path","historyProps","UpdateSnippet","FormSignup","FormSignin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","UserProvider","authValues","Provider","children","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.408f275b.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = (props) => {\n    return (\n        <div>\n            <h1>COPY-PASTA</h1>\n        </div>\n    );\n}\n\n\nexport default Home;","import React from \"react\";\n\nconst UserContext = React.createContext();\nexport default UserContext","import React from \"react\";\nimport UserContext from \"./UserContext\";\n\nconst withUser = (ComponentToPassUserContextTo) => {\n  return function (props) {\n    return (\n      <UserContext.Consumer>\n        {(context) => (\n          <ComponentToPassUserContextTo {...props} context={context} />\n        )}\n      </UserContext.Consumer>\n    );\n  };\n};\nexport default withUser;\n\n\n\n\n\n\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport withUser from \"../auth/withUser\";\nimport \"../styles/NavMain.css\";\n\nconst NavMain = (props) => {\n  const { context, toggleFormDisplay } = props;\n\n  const handleLogout = () => {\n    context.removeUser();\n  };\n\n  return (\n    <nav className=\"NavMain\">\n      <NavLink exact to=\"/\">\n        <h3 className=\"logo\">CopyPasta</h3>\n      </NavLink>\n      <ul>\n        {context.isLoggedIn && (\n          <React.Fragment>\n            <li>\n              <NavLink to=\"/add-snippet\">\n                Add Snippet\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/profile\">\n                {context.user && context.user.userName}\n              </NavLink>\n            </li>\n            <li>\n              <a onClick={handleLogout}>Logout</a>\n            </li>\n          </React.Fragment>\n        )}\n        {!context.isLoggedIn && (\n          <React.Fragment>\n            <li>\n              <NavLink to=\"/signin\">Log in</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/signup\">Create account</NavLink>\n            </li>\n          </React.Fragment>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default withUser(NavMain);","import axios from \"axios\";\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true,\n});\n\nfunction errorHandler(error) {\n  if (error.response) {\n    console.log(error.response.data.message);\n    throw error.response.data;\n  }\n  throw error;\n}\n\n\n\nconst apiHandler = {\n  service,\n\n  signup(userInfo) {\n    return service\n      .post(\"/api/auth/signup\", userInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  signin(userInfo) {\n    return service\n      .post(\"/api/auth/signin\", userInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  isLoggedIn() {\n    return service\n      .get(\"/api/auth/isLoggedIn\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  logout() {\n    return service\n      .get(\"/api/auth/logout\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getSnippets() {\n    return service\n      .get(\"/api/snippet\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getSnippet(id) {\n    return service\n      .get(`/api/snippet/${id}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  updateUser(id, data) {\n    return service\n      .patch(`/api/user/${id}`, data)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getUserInfos(id) {\n    return service\n      .get(`/api/user/${id}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  removeSnippet(snippetId) {\n    return service\n      .delete(`/api/snippet/${snippetId}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  updateSnippet(snippetId, data) {\n    return service\n      .patch(`/api/snippet/${snippetId}`, data)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getUserSnippets(id) {\n    return service\n      .get(`/api/user/${id}/snippet/`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  addSnippet(data) {\n    return service\n      .post(\"/api/snippet\", data)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n};\n\nexport default apiHandler;","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport withUser from \"../../auth/withUser\";\nimport apiHandler from \"../../api/apiHandler\";\n// import \"../../styles/form.css\";\nclass FormSignin extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n    };\n    handleChange = (event) => {\n        const value = event.target.value;\n        const key = event.target.name;\n        this.setState({ [key]: value });\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        apiHandler\n            .signin(this.state)\n            .then((data) => {\n                this.props.context.setUser(data); // update the context\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n    render() {\n        if (this.props.context.isLoggedIn) {\n            // This logic is the same as in the <ProtectedRoute /> component\n            // Here this is handled within the component, if there are some views\n            // that are not meant to be rendered to a logged in user,\n            // you could make a generic component out of it, just like <ProtectedRoute />\n            // and instead of checking if the user is not logged in, check if the user is logged in\n            // and redirect him to whatever page you want, in the case below: the home page.\n            return <Redirect to=\"/\" />;\n        }\n        return (\n            <section className=\"form-section\">\n                <header className=\"header\">\n                    <h1>\n                        Welcome back\n                    </h1>\n                </header>\n                <form autoComplete=\"off\" className=\"form\" onSubmit={this.handleSubmit}>\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">\n                            Email\n            </label>\n                        <input\n                            onChange={this.handleChange}\n                            value={this.state.email}\n                            className=\"input\"\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"password\">\n                            Password\n            </label>\n                        <input\n                            onChange={this.handleChange}\n                            value={this.state.password}\n                            className=\"input\"\n                            id=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                        />\n                    </div>\n                    <button className=\"btn-submit\">Let's go!</button>\n                </form>\n                <div className=\"form-section link\">\n                    <p>Don't yet have an account? </p>\n                    <Link to=\"/signup\">Register</Link>\n                </div>\n            </section>\n        );\n    }\n}\nexport default withUser(FormSignin);","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport withUser from \"../../auth/withUser\";\nimport apiHandler from \"../../api/apiHandler\";\n\n\n\n\nclass FormSignup extends Component {\n    state = {};\n    handleChange = (event) => {\n        const value = event.target.value;\n        const key = event.target.name;\n        this.setState({ [key]: value });\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        apiHandler\n            .signup(this.state)\n            .then((data) => {\n                this.props.context.setUser(data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n    render() {\n        if (this.props.context.isLoggedIn) {\n            return <Redirect to=\"/\" />;\n        }\n        return (\n            <section className=\"form-section\">\n                <header className=\"header\">\n                    <h1>\n                        Hello\n            <span role=\"img\" aria-label=\"hand\">\n                            :italianhand:\n            </span>\n                    </h1>\n                </header>\n                <form\n                    autoComplete=\"off\"\n                    className=\"form\"\n                    onChange={this.handleChange}\n                    onSubmit={this.handleSubmit}\n                >\n                    <h2>Create account</h2>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"userName\">\n                            User Name\n            </label>\n                        <input\n                            className=\"input\"\n                            id=\"usertName\"\n                            type=\"text\"\n                            name=\"userName\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">\n                            Email\n            </label>\n                        <input className=\"input\" id=\"email\" type=\"email\" name=\"email\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"password\">\n                            Password\n            </label>\n                        <input\n                            className=\"input\"\n                            id=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"linkedIn\">\n                            LinkedIn\n            </label>\n                        <input\n                            className=\"input\"\n                            id=\"linkedIn\"\n                            type=\"url\"\n                            name=\"LinkedIn\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"GitHub\">\n                            GitHub\n            </label>\n                        <input\n                            className=\"input\"\n                            id=\"github\"\n                            type=\"url\"\n                            name=\"GitHub\"\n                        />\n                    </div>\n                    <button className=\"btn-submit\">Let's go!</button>\n                </form>\n                <div className=\"form-section link\">\n                    <p>Already have an account? </p>\n                    <Link to=\"/signin\">Log in</Link>\n                </div>\n            </section>\n        );\n    }\n}\nexport default withUser(FormSignup);","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nconst SnippetCard = (props) => {\n    const { picture, title, _id, userName, category, description, snippet, credits, handleDelete } =\n        props;\n\n    return (\n        <div className=\"SnippetCard\">\n            <div className=\"picture\">\n                <img src={picture} alt={title} />\n            </div>\n            <div className=\"description\">\n                <h2>{title}</h2>\n                <h4>User: {userName}</h4>\n                <h5>Category: {category}</h5>\n                <p>Description: {description}</p>\n                <p>Snippet: {snippet}</p>\n                <p>Credits: {credits}</p>\n                <div className=\"buttons\">\n                    <button onClick={(event) => handleDelete(_id)} secondary>\n                            Delete snippet\n            </button>\n                    <button>\n                        <Link to={\"/update-snippet/\" + _id}>\n                            Edit Snippet\n                        </Link>\n            </button>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default SnippetCard\n","export function buildFormData(formData, data, parentKey) {\n    if (\n      data &&\n      typeof data === \"object\" &&\n      !(data instanceof Date) &&\n      !(data instanceof File)\n    ) {\n      Object.keys(data).forEach((key) => {\n        buildFormData(\n          formData,\n          data[key],\n          parentKey ? `${parentKey}[${key}]` : key\n        );\n      });\n    } else {\n      const value = data == null ? \"\" : data;\n      formData.append(parentKey, value);\n    }\n  }","import React, { Component } from \"react\";\nimport withUser from \"../auth/withUser\";\nimport apiHandler from \"../api/apiHandler\";\nimport { Redirect } from \"react-router-dom\";\nimport { buildFormData } from \"../utils/buildFormData\";\nimport { useParams } from \"react-router-dom\";\n// import \"../../styles/ItemForm.css\";\n\nconst state = {\n    title: \"\",\n    userName: \"\",\n    description: \"\",\n    category: \"\",\n    snippet: \"\",\n    tempPictureUrl: null,\n    credits: \"\",\n    snippetUpdated: false,\n    error: null,\n}  // initial state \nclass UpdateSnippet extends Component {\n\n    state = state;\n    updateRef = React.createRef();\n\n    handleChange = (event) => {\n\n        const value = event.target.value === \"file\" ? event.target.files[0] : event.target.value;\n        const key = event.target.name;\n        this.setState({ [key]: value });\n    };\n\n\n    componentDidMount() {\n\n        console.log(\"here\")\n        // console.log(\"componentDidMount was called\");\n        // console.log(\"this.props\", this.props);\n        // make api call to get one snippet\n        const id = this.props.match.params.id;\n        apiHandler.getSnippet(id).then(data => {\n            console.log(data)\n            this.setState({\n                title: data.title,\n                userName: data.userName,\n                description: data.description,\n                category: data.category, \n                snippet: data.snippet,\n                creator: data.creator,\n                picture: data.picture,\n                credits: data.credits,\n            })\n        })\n\n\n\n        // set the state\n\n\n        // the inputs are normally linked to the state and the values should be displayed in the \n        // snippets\n\n\n\n    }\n//we create a temporary URL to view out file before updating it\n    handlePreview = event => {\n\n        const file = event.target.files[0];\n        const fakeUrl = URL.createObjectURL(file);\n        this.setState({\n            tempPictureUrl: fakeUrl\n        })\n\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const formData = new FormData();\n        formData.append(\"credits\", this.state.credits)\n        formData.append(\"title\", this.state.title);\n        formData.append(\"description\", this.state.description);\n        formData.append(\"userName\", this.state.userName);\n        formData.append(\"category\", this.state.category);\n        formData.append(\"snippet\", this.state.snippet);\n\n        const files = this.updateRef.current.files;\n\n        if (files) {\n            formData.append(\"picture\", files[0])\n        }\n\n        const id = this.props.match.params.id;\n\n        apiHandler.updateSnippet(id, formData).then(data => {\n            this.setState({\n                ...state,\n                snippetUpdated: true,\n            });\n\n        })\n};\n\n\n    render() {\n        if (this.state.snippetUpdated) {\n            return <Redirect to=\"/profile\" />;\n        }\n\n        return (\n            <div className=\"SnippetForm-container\">\n                <form\n\n                    className=\"SnippetForm\"\n                    onSubmit={this.handleSubmit}>\n                    <h2>Edit snippet</h2>\n                    <img style={{\n                        width: 64,\n                        height: 64\n                    }} src={this.state.tempPictureUrl || this.state.picture} />\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\">\n                            Title\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.title}\n                            name=\"title\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label\n                            className=\"label\"\n                            htmlFor=\"userName\">\n                            User Name\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.userName || \"\"}\n                            placeholder=\"User Name\"\n                            name=\"userName\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"description\">\n                            Description\n            </label>\n                        <textarea\n                            value={this.state.description || \"\"}\n                            onChange={this.handleChange}\n                            name=\"description\"\n                            id=\"description\"\n                            className=\"text-area\"\n                            placeholder=\"Describe your snippet!\"\n                        ></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"category\">\n                            Category\n            </label>\n                        <select\n                            name=\"category\"\n                            id=\"category\"\n                            onChange={this.handleChange}\n                            value={this.state.category}\n                        >\n                            <option value=\"HTML\">HTML</option>\n                            <option value=\"CSS\">CSS</option>\n                            <option value=\"JS\">JS</option>\n                            <option value=\"React\">React</option>\n                            <option value=\"Other\">Other</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"snippet\">\n                            Snippet\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            name=\"snippet\"\n                            onChange={this.handleChange}\n                            value={this.state.snippet || \"\"}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"picture\">\n                            Result\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"file\"\n                            onChange={this.handlePreview}\n                            ref={this.updateRef}\n                            name=\"picture\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\">\n                            Credits\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.credits || \"\"}\n                            placeholder=\"credits\"\n                            name=\"credits\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"creator\">\n                            Creator\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.creator || \"\"}\n                            placeholder=\"Creator\"\n                            name=\"creator\"\n                        />\n                    </div>\n\n                    <button primary>Add Snippet</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withUser(UpdateSnippet);","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n// import AutoComplete from \"../AutoComplete\";\n// import Button from \"../Button\";\n// import Message from \"../Message\";\nimport withUser from \"../auth/withUser\";\nimport apiHandler from \"../api/apiHandler\";\nimport { buildFormData } from \"../utils/buildFormData\";\n// import FeedBack from \"../FeedBack\";\n// import \"../../styles/ItemForm.css\";\n\nconst initialState = {\n    title: \"\",\n    userName: \"\",\n    description: \"\",\n    category: \"\",\n    snippet: \"\",\n    credits: \"\",\n    snippetAdded: false,\n    httpResponse: null,\n    error: null,\n};\n\nclass SnippetForm extends Component {\n    state = initialState;\n\n    pictureRef = React.createRef();\n\n    handleChange = (event) => {\n\n        const value = event.target.value;\n        const key = event.target.name;\n        this.setState({ [key]: value });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const fd = new FormData();\n        const { httpResponse, ...data } = this.state;\n        buildFormData(fd, data);\n\n        fd.append(\"picture\", this.pictureRef.current.files[0]); \n\n\n        apiHandler\n            .addSnippet(fd)\n            .then((data) => {\n                this.setState({\n                    ...initialState,\n                    snippetAdded: true,\n                });\n\n            })\n    };\n\n    render() {\nif (this.state.snippetAdded) {\n    return <Redirect to=\"/profile\" />;\n}\n        return (\n            <div className=\"SnippetForm-container\">\n                <form className=\"SnippetForm\" onSubmit={this.handleSubmit}>\n                    <p onClick={this.props.handleClose} className=\"close-link\">\n                        X\n          </p>\n                    <h2>Add Item</h2>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\">\n                            Title\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.title}\n                            placeholder=\"Title\"\n                            name=\"title\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"userName\">\n                            User Name\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.userName}\n                            placeholder=\"User Name\"\n                            name=\"userName\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"description\">\n                            Description\n            </label>\n                        <textarea\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                            name=\"description\"\n                            id=\"description\"\n                            className=\"text-area\"\n                            placeholder=\"Describe your snippet!\"\n                        ></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"category\">\n                            Category\n            </label>\n                        <select\n                            name=\"category\"\n                            id=\"category\"\n                            onChange={this.handleChange}\n                            value={this.state.category}\n                        >\n                            <option value=\"\" disabled>\n                                Select a category\n              </option>\n                            <option value=\"HTML\">HTML</option>\n                            <option value=\"CSS\">CSS</option>\n                            <option value=\"JS\">JS</option>\n                            <option value=\"React\">React</option>\n                            <option value=\"Other\">Other</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"snippet\">\n                            Snippet\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.snippet}\n                            placeholder=\"Snippet\"\n                            name=\"snippet\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"picture\">\n                            Result image\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"file\"\n\n                            ref={this.pictureRef}\n\n                            name=\"picture\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"credits\">\n                            Credits\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.credits}\n                            placeholder=\"Give some credits\"\n                            name=\"credits\"\n                        />\n                    </div>\n\n                    <button primary>Add Snippet</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withUser(SnippetForm);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport withUser from \"../auth/withUser\";\nimport apiHandler from \"../api/apiHandler\";\nimport SnippetCard from \"../snippets/SnippetCard\";\nimport UpdateSnippet from \"../snippets/UpdateSnippet\";\nimport AddSnippet from \"./AddSnippet\";\n//import \"../styles/Profile.css\";\n//import \"../styles/form.css\";\n\nclass Profile extends Component {\n    state = {\n        //httpResponse: null,\n        user: null,\n        selectedSnippet: null,\n        userSnippets: [],\n    };\n    componentDidMount() {\n        const promises = Promise.all([\n            apiHandler.getUserInfos(),\n            apiHandler.getUserSnippets(),\n        ]);\n        promises.then((allPromises) => {\n            const userInfos = allPromises[0];\n            const userSnippets = allPromises[1];\n            console.log(allPromises);\n            this.setState({\n                user: userInfos,\n                userSnippets: userSnippets,\n            });\n        });\n    }\n\n\n    deleteSnippet = (snippetId) => {\n        apiHandler.removeSnippet(snippetId).then(() => {\n           const userSnippets = [...this.state.userSnippets].filter(\n                (snippet) => snippet._id !== snippetId\n            );\n            this.setState({ userSnippets }); \n        });\n    };\n\n    onSnippetSelect = (snippetId) => {\n        const selectedSnippet = this.state.userSnippets.find(\n            (snippet) => snippet._id === snippetId\n        );\n        this.setState({ selectedSnippet: selectedSnippet });\n    };\n    onEditFormClose = () => {\n        this.setState({ selectedSnippet: null });\n    };\n    handleSnippetUpdate = (updateSnippet) => {\n        const userSnippets = [...this.state.userSnippets].map((snippet) =>\n            snippet._id === updateSnippet._id ? updateSnippet : snippet\n        );\n        this.setState({ userSnippets });\n    };\n\n    addSnippet = (snippet) => {\n        this.setState({ userSnippets: [...this.state.userSnippets, snippet] });\n    };\n\n\n    render() {\n        const { userSnippets, selectedSnippet, user } = this.state;\n        console.log(\"selectedSnippet\", selectedSnippet);\n        console.log(\"this.state\", this.state);\n        if (!user) return null;\n        return (\n            <section className=\"Profile\">\n                {selectedSnippet && (\n                    <UpdateSnippet\n                        snippet={selectedSnippet}\n                        handleClose={this.onEditFormClose}\n                        onSnippetUpdate={this.handleSnippetUpdate}\n                    />\n                )}\n                {user && this.props.displayForm && (\n                    <AddSnippet\n                        handleClose={this.props.handleFormClose}\n                        addSnippet={this.addSnippet}\n                    />\n                )}\n                <div className=\"user-picture\">\n                    <img src={user.picture} alt={user.userName} />\n                </div>\n                <div className=\"user-presentation\">\n                    <h2 className=\"title\">\n                        {user.userName}\n                    </h2>\n                    <div>\n                        Linkedin: <a href={user.LinkedIn}>{user.LinkedIn} </a>\n                    </div>\n                    <div>\n                        GitHub: <a href={user.GitHub}> {user.GitHub} </a>\n                    </div>\n                    <Link className=\"link\" to=\"/profile/settings\">\n                        Edit profile\n            </Link>\n                </div>\n                {!userSnippets.length && (\n                    <React.Fragment>\n                        <div>\n                            <img src=\"/media/personal-page-empty-state.svg\" alt=\"\" />\n                        </div>\n                        <p>You don't have any snippets :(</p>\n                    </React.Fragment>\n                )}\n                {!!userSnippets.length && (\n                    <div className=\"SnippetCard\">\n                        <h3>Your snippets</h3>\n                        {userSnippets.map((snippet, index) => (\n                            <SnippetCard\n                                key={index}\n                                {...snippet}\n                                handleDelete={this.deleteSnippet}\n                            />\n                        ))}\n                    </div>\n                )}\n            </section>\n        );\n    }\n}\nexport default withUser(Profile);","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\nfunction ProtectedRoute({ component: Component, render, ...rest }) {\n    return (\n        <UserContext.Consumer>\n            {(context) => {\n                if (context.isLoading) {\n                    return <div>Loading...</div>;\n                }\n                if (context.isLoggedIn) {\n                    return (\n                        <React.Fragment>\n                            {/* If render prop is used instead of the component prop when calling ProtectedRoute (emulates <Route/> render method.*/}\n                            {render && <Route {...rest} render={render} />}\n                            {!render && <Route {...rest} component={Component} />}\n                        </React.Fragment>\n                    );\n                } else {\n                    return <Redirect to=\"/signin\" />;\n                }\n            }}\n        </UserContext.Consumer>\n    );\n}\n\nexport default ProtectedRoute;","import './App.css';\nimport React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport NavMain from \"./components/NavMain\";\nimport { FormSignup, FormSignin } from './components/Forms';\nimport Profile from './pages/Profile';\nimport ProtectedRoute from './utils/ProtectedRoute';\nimport AddSnippet from './pages/AddSnippet'\nimport UpdateSnippet from './snippets/UpdateSnippet';\n\nclass App extends React.Component {\n  state = {\n    displayForm: false,\n  };\n\n  toggleFormDisplay = () => {\n    //  this.setState({ displayForm: !this.state.displayForm });\n  };\n\n  handleClose = () => {\n    this.setState({ displayForm: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavMain toggleFormDisplay={this.toggleFormDisplay} />\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(historyProps) => (\n              <Home\n                {...historyProps}\n                displayForm={this.state.displayForm}\n                handleFormClose={this.handleClose}\n              />\n            )}\n          />\n\n          <ProtectedRoute\n            exact\n            path=\"/profile\"\n            render={(historyProps) => (\n              <Profile\n                {...historyProps}\n                displayForm={this.state.displayForm}\n                handleFormClose={this.handleClose}\n              />\n            )}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/add-snippet\"\n            render={(historyProps) => (\n              <AddSnippet\n                {...historyProps}\n                displayForm={this.state.displayForm}\n                handleFormClose={this.handleClose}\n              />\n            )}\n          />\n\n          {/*       <ProtectedRoute\n            exact\n            path=\"/profile/settings\"\n            component={FormProfile}\n          /> */}\n <ProtectedRoute exact path=\"/update-snippet/:id\" component={UpdateSnippet}/>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signup\" component={FormSignup} />\n          <Route exact path=\"/signin\" component={FormSignin} />\n        </Switch>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\nimport apiHandler from \"../api/apiHandler\";\nimport UserContext from \"./UserContext\";\n\nclass UserProvider extends Component {\n  state = {\n    user: null,\n    isLoggedIn: false,\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    apiHandler\n      .isLoggedIn()\n      .then((data) => {\n        this.setState({ user: data, isLoggedIn: true, isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({ user: null, isLoggedIn: false, isLoading: false });\n      });\n  }\n\n  setUser = (user) => {\n    this.setState({ user, isLoggedIn: true });\n  };\n\n  removeUser = () => {\n    this.setState({ user: null, isLoggedIn: false });\n  };\n\n  render() {\n    //  Setup all the values/functions you want to expose to anybody reading\n    // from the AuthContext.\n    const authValues = {\n      user: this.state.user,\n      setUser: this.setUser,\n      removeUser: this.removeUser,\n      isLoggedIn: this.state.isLoggedIn,\n      isLoading: this.state.isLoading,\n    };\n\n    return (\n      <UserContext.Provider value={authValues}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default UserProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport UserProvider from \"./auth/UserProvider\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <UserProvider>\n        <App />\n      </UserProvider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}