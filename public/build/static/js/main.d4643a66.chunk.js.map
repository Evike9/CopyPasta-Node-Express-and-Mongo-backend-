{"version":3,"sources":["snippets/SnippetDisplay.jsx","api/apiHandler.js","pages/Home.jsx","auth/UserContext.jsx","auth/withUser.jsx","components/NavMain.jsx","components/Forms/FormSignin.jsx","components/Forms/FormSignup.jsx","components/Forms/FormProfile.jsx","snippets/SnippetCard.jsx","snippets/UpdateSnippet.jsx","utils/buildFormData.jsx","pages/AddSnippet.jsx","pages/Profile.jsx","utils/ProtectedRoute.jsx","snippets/SnippetDetail.jsx","App.jsx","reportWebVitals.js","auth/UserProvider.jsx","index.js"],"names":["SnippetDisplay","props","snippet","picture","title","userName","category","_id","console","log","className","src","alt","to","service","axios","create","baseURL","process","withCredentials","errorHandler","error","response","data","message","apiHandler","signup","userInfo","post","then","res","catch","signin","isLoggedIn","get","logout","getSnippets","getSnippet","id","updateUser","patch","getUserInfos","removeSnippet","snippetId","delete","updateSnippet","getUserSnippets","addSnippet","Home","state","snippets","setState","this","map","Component","UserContext","React","createContext","withUser","ComponentToPassUserContextTo","Consumer","context","exact","Fragment","user","onClick","removeUser","class","email","password","handleChange","event","value","target","key","name","handleSubmit","preventDefault","setUser","autoComplete","onSubmit","htmlFor","onChange","type","LinkedIn","GitHub","tempPictureUrl","userUpdated","imageRef","createRef","files","handlePreview","file","fakeUrl","URL","createObjectURL","formData","FormData","append","current","match","params","ref","disabled","primary","SnippetCard","description","credits","handleDelete","secondary","snippetUpdated","updateRef","creator","placeholder","buildFormData","parentKey","Date","File","Object","keys","forEach","initialState","snippetAdded","httpResponse","pictureRef","fd","selectedSnippet","userSnippets","deleteSnippet","filter","onSnippetSelect","find","handleSnippetUpdate","Promise","all","allPromises","userInfos","displayForm","AddSnippet","href","length","index","ProtectedRoute","component","render","rest","isLoading","SnippetDetail","App","path","historyProps","FormProfile","UpdateSnippet","FormSignup","FormSignin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","UserProvider","authValues","Provider","children","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4643a66.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nconst SnippetDisplay = (props) => {\n    const { picture, title, userName, category, _id } =\n    props.snippet;\n        console.log(props.snippet)\n\n    return (\n        <div className=\"SnippetDisplay\">\n            <div className=\"picture\">\n                <img src={picture} alt={title} />\n            </div>\n            <div className=\"description\">\n                <h2>Title: {title}</h2>\n                <h4>User: {userName}</h4>\n                <h5>Category: {category}</h5>\n            </div>\n            <button>\n                        <Link to={\"/snippet/\" + _id}>\n                            View Snippet\n                        </Link>\n            </button>\n        </div>\n    );\n};\n\n\nexport default SnippetDisplay\n","import axios from \"axios\";\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true,\n});\n\nfunction errorHandler(error) {\n  if (error.response) {\n    console.log(error.response.data.message);\n    throw error.response.data;\n  }\n  throw error;\n}\n\nconst apiHandler = {\n  service,\n\n  signup(userInfo) {\n    return service\n      .post(\"/api/auth/signup\", userInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  signin(userInfo) {\n    return service\n      .post(\"/api/auth/signin\", userInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  isLoggedIn() {\n    return service\n      .get(\"/api/auth/isLoggedIn\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  logout() {\n    return service\n      .get(\"/api/auth/logout\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getSnippets() {\n    return service\n      .get(\"/api/snippet\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getSnippet(id) {\n    return service\n      .get(`/api/snippet/${id}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  updateUser(id, data) {\n    return service\n      .patch(`/api/user/${id}`, data)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getUserInfos(id) {\n    return service\n      .get(`/api/user/${id}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  removeSnippet(snippetId) {\n    return service\n      .delete(`/api/snippet/${snippetId}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  updateSnippet(snippetId, data) {\n    return service\n      .patch(`/api/snippet/${snippetId}`, data)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getUserSnippets(id) {\n    return service\n      .get(`/api/user/${id}/snippet/`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  addSnippet(data) {\n    return service\n      .post(\"/api/snippet\", data)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n};\n\nexport default apiHandler;","import React, { Component } from 'react'\nimport SnippetDisplay from '../snippets/SnippetDisplay'\nimport apiHandler from \"../api/apiHandler\";\n//import SnippetDetail from '../snippets/SnippetDetail'\n\nclass Home extends Component {\n    state = {\n        snippet: null,\n        snippets: [],\n    }\n    componentDidMount() {\n        apiHandler.getSnippets().then((data) => {\n            this.setState({ snippets: data });\n        });\n    }\n    render() {\n        return (\n            <div>\n                {\n                    this.state.snippets.map((snippet) => {\n                        return (<div>\n                            <SnippetDisplay\n                                snippet={snippet} />\n                        </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\nexport default Home","import React from \"react\";\n\nconst UserContext = React.createContext();\nexport default UserContext","import React from \"react\";\nimport UserContext from \"./UserContext\";\n\nconst withUser = (ComponentToPassUserContextTo) => {\n  return function (props) {\n    return (\n      <UserContext.Consumer>\n        {(context) => (\n          <ComponentToPassUserContextTo {...props} context={context} />\n        )}\n      </UserContext.Consumer>\n    );\n  };\n};\nexport default withUser;\n\n\n\n\n\n\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport withUser from \"../auth/withUser\";\nimport \"../styles/NavMain.css\";\n\nconst NavMain = (props) => {\n  const { context } = props;\n\n  const handleLogout = () => {\n    context.removeUser();\n  };\n\n  return (\n    <nav className=\"NavMain\">\n      <NavLink exact to=\"/\">\n      <img src=\"./logo.png\" className=\"logo\" alt=\"logo\"/>\n\n      </NavLink>\n      <ul>\n        {context.isLoggedIn && (\n          <React.Fragment>\n            <li>\n              <NavLink to=\"/add-snippet\">\n                Add Snippet\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/profile\">\n                {context.user && context.user.userName}\n              </NavLink>\n            </li>\n            <li>\n              <NavLink exact to = \"/\"\n              onClick={handleLogout}>Logout</NavLink>\n            </li>\n          </React.Fragment>\n        )}\n        {!context.isLoggedIn && (\n          <React.Fragment>\n            <li>\n              <NavLink to=\"/signin\"class=\"nav-log\">Log in</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/signup\" class=\"nav-log\">Create account</NavLink>\n            </li>\n          </React.Fragment>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default withUser(NavMain);","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport withUser from \"../../auth/withUser\";\nimport apiHandler from \"../../api/apiHandler\";\nimport \"../../styles/FormSignin.css\";\nclass FormSignin extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n    };\n    handleChange = (event) => {\n        const value = event.target.value;\n        const key = event.target.name;\n        this.setState({ [key]: value });\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        apiHandler\n            .signin(this.state)\n            .then((data) => {\n                this.props.context.setUser(data); // update the context\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n    render() {\n        if (this.props.context.isLoggedIn) {\n            // This logic is the same as in the <ProtectedRoute /> component\n            // Here this is handled within the component, if there are some views\n            // that are not meant to be rendered to a logged in user,\n            // you could make a generic component out of it, just like <ProtectedRoute />\n            // and instead of checking if the user is not logged in, check if the user is logged in\n            // and redirect him to whatever page you want, in the case below: the home page.\n            return <Redirect to=\"/\" />;\n        }\n        return (\n            <section className=\"form-section\">\n                <header className=\"header\">\n                    <h1>\n                        Welcome back\n                    </h1>\n                </header>\n                <form autoComplete=\"off\" className=\"form\" onSubmit={this.handleSubmit}>\n                    <h2>Login</h2>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">\n                            Email\n            </label>\n                        <input\n                            onChange={this.handleChange}\n                            value={this.state.email}\n                            className=\"input\"\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"password\">\n                            Password\n            </label>\n                        <input\n                            onChange={this.handleChange}\n                            value={this.state.password}\n                            className=\"input\"\n                            id=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                        />\n                    </div>\n                    <button className=\"btn-submit\">Let's go!</button>\n                </form>\n                <div className=\"form-section link\">\n                    <p>Don't yet have an account? </p>\n                    <Link to=\"/signup\">Register</Link>\n                </div>\n            </section>\n        );\n    }\n}\nexport default withUser(FormSignin);","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport withUser from \"../../auth/withUser\";\nimport apiHandler from \"../../api/apiHandler\";\n\n\n\n\nclass FormSignup extends Component {\n    state = {};\n    handleChange = (event) => {\n        const value = event.target.value;\n        const key = event.target.name;\n        this.setState({ [key]: value });\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        apiHandler\n            .signup(this.state)\n            .then((data) => {\n                this.props.context.setUser(data);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n    render() {\n        if (this.props.context.isLoggedIn) {\n            return <Redirect to=\"/\" />;\n        }\n        return (\n            <section className=\"form-section\">\n                <header className=\"header\">\n                    <h1>\n                        Hello\n                    </h1>\n                </header>\n                <form\n                    autoComplete=\"off\"\n                    className=\"form\"\n                    onChange={this.handleChange}\n                    onSubmit={this.handleSubmit}\n                >\n                    <h2>Create account</h2>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"userName\">\n                            User Name\n            </label>\n                        <input\n                            className=\"input\"\n                            id=\"usertName\"\n                            type=\"text\"\n                            name=\"userName\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"email\">\n                            Email\n            </label>\n                        <input className=\"input\" id=\"email\" type=\"email\" name=\"email\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"password\">\n                            Password\n            </label>\n                        <input\n                            className=\"input\"\n                            id=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"linkedIn\">\n                            LinkedIn\n            </label>\n                        <input\n                            className=\"input\"\n                            id=\"linkedIn\"\n                            type=\"url\"\n                            name=\"LinkedIn\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"GitHub\">\n                            GitHub\n            </label>\n                        <input\n                            className=\"input\"\n                            id=\"github\"\n                            type=\"url\"\n                            name=\"GitHub\"\n                        />\n                    </div>\n                    <button className=\"btn-submit\">Let's go!</button>\n                </form>\n                <div className=\"form-section link\">\n                    <p>Already have an account? </p>\n                    <Link to=\"/signin\">Log in</Link>\n                </div>\n            </section>\n        );\n    }\n}\nexport default withUser(FormSignup);","import React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport withUser from \"../../auth/withUser\";\nimport { Redirect } from \"react-router-dom\";\n//import \"../../styles/form.css\";\nconst state = {\n  userName: \"\",\n  LinkedIn: \"\",\n  email: \"\",\n  GitHub: \"\",\n  tempPictureUrl: null,\n  userUpdated: false,\n}\nclass FormProfile extends Component {\n  state = state\n  imageRef = React.createRef();\n\n  handleChange = (event) => {\n    const key = event.target.name; // This function requires that you have the \"name\" attribute on your form fields.\n    const value = event.target.value === \"file\" ? event.target.files[0] : event.target.value;\n    this.setState({ [key]: value });\n  };\n\n  componentDidMount() {\n\n    const id = this.props.match.params.id;\n    apiHandler.getUserInfos(id).then(data => {\n      console.log(data)\n      this.setState({\n        userName: data.userName,\n        email: data.email,\n        LinkedIn: data.LinkedIn,\n        GitHub: data.GitHub,\n        picture: data.picture,\n      })\n    })\n  }\n\n    handlePreview = event => {\n\n      const file = event.target.files[0];\n      const fakeUrl = URL.createObjectURL(file);\n      this.setState({\n        tempPictureUrl: fakeUrl\n      })\n\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault();\n\n      const formData = new FormData();\n      formData.append(\"userName\", this.state.userName);\n      formData.append(\"email\", this.state.email)\n      formData.append(\"LinkedIn\", this.state.LinkedIn);\n      formData.append(\"GitHub\", this.state.GitHub);\n\n      const files = this.imageRef.current.files;\n      if (files) {\n        formData.append(\"picture\", files[0])\n      }\n\n      const id = this.props.match.params.id;\n\n      apiHandler.updateUser(id, formData).then(data => {\n        this.setState({\n          ...state,\n          userUpdated: true,\n        });\n      })\n    };\n\n    render() {\n      if (this.state.userUpdated) {\n        return <Redirect to=\"/profile\" />;\n      }\n\n      return (\n        <section className=\"form-section\">\n          <form\n            className=\"form\"\n            onSubmit={this.handleSubmit}>\n            <h2 className=\"header\">Edit profile</h2>\n            <img\n              src={this.state.tempPictureUrl || this.state.picture}\n              alt={this.state.userName}\n            />\n            <div className=\"form-group\">\n              <label className=\"label\" htmlFor=\"picture\">\n                Change profile image\n            </label>\n              <input\n                className=\"input\"\n                type=\"file\"\n                onChange={this.handlePreview}\n                ref={this.imageRef}\n                name=\"picture\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"label\" htmlFor=\"userName\">\n                User name\n            </label>\n              <input\n                className=\"input\"\n                id=\"userName\"\n                type=\"text\"\n                name=\"userName\"\n                onChange={this.handleChange}\n                value={this.state.userName}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"label\" htmlFor=\"email\">\n                Email\n            </label>\n              <input\n                className=\"input\"\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={this.state.email}\n                disabled\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"label\" htmlFor=\"LinkedIn\">\n                LinkedIn\n            </label>\n              <input\n                className=\"input\"\n                id=\"LinkedIn\"\n                type=\"url\"\n                name=\"LinkedIn\"\n                onChange={this.handleChange}\n                value={this.state.LinkedIn}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"label\" htmlFor=\"GitHub\">\n                GitHub\n            </label>\n              <input\n                className=\"input\"\n                id=\"GitHub\"\n                type=\"url\"\n                name=\"GitHub\"\n                onChange={this.handleChange}\n                value={this.state.GitHub}\n              />\n            </div>\n            <button primary>\n              Save\n          </button>\n          </form>\n        </section>\n      );\n    }\n  }\nexport default withUser(FormProfile);","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nconst SnippetCard = (props) => {\n    const { picture, title, _id, userName, category, description, snippet, credits, handleDelete } =\n        props;\n\n    return (\n        <div className=\"SnippetCard\">\n            <div className=\"picture\">\n                <img src={picture} alt={title} />\n            </div>\n            <div className=\"description\">\n                <h2>{title}</h2>\n                <h4>User: {userName}</h4>\n                <h5>Category: {category}</h5>\n                <p>Description: {description}</p>\n                <p>Snippet: {snippet}</p>\n                <p>Credits: {credits}</p>\n                <div className=\"buttons\">\n                    <button onClick={(event) => handleDelete(_id)} secondary>\n                            Delete snippet\n            </button>\n                    <button>\n                        <Link to={\"/update-snippet/\" + _id}>\n                            Edit Snippet\n                        </Link>\n            </button>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default SnippetCard\n","import React, { Component } from \"react\";\nimport withUser from \"../auth/withUser\";\nimport apiHandler from \"../api/apiHandler\";\nimport { Redirect } from \"react-router-dom\";\n// import \"../../styles/ItemForm.css\";\n\nconst state = {\n    title: \"\",\n    userName: \"\",\n    description: \"\",\n    category: \"\",\n    snippet: \"\",\n    tempPictureUrl: null,\n    credits: \"\",\n    snippetUpdated: false,\n    error: null,\n}  // initial state \nclass UpdateSnippet extends Component {\n\n    state = state;\n    updateRef = React.createRef();\n\n    handleChange = (event) => {\n\n        const value = event.target.value === \"file\" ? event.target.files[0] : event.target.value;\n        const key = event.target.name;\n        this.setState({ [key]: value });\n    };\n\n\n    componentDidMount() {\n\n        console.log(\"here\")\n        // console.log(\"componentDidMount was called\");\n        // console.log(\"this.props\", this.props);\n        // make api call to get one snippet\n        const id = this.props.match.params.id;\n        apiHandler.getSnippet(id).then(data => {\n            console.log(data)\n            this.setState({\n                title: data.title,\n                userName: data.userName,\n                description: data.description,\n                category: data.category, \n                snippet: data.snippet,\n                creator: data.creator,\n                picture: data.picture,\n                credits: data.credits,\n            })\n        })\n\n\n\n        // set the state\n\n\n        // the inputs are normally linked to the state and the values should be displayed in the \n        // snippets\n\n\n\n    }\n//we create a temporary URL to view out file before updating it\n    handlePreview = event => {\n\n        const file = event.target.files[0];\n        const fakeUrl = URL.createObjectURL(file);\n        this.setState({\n            tempPictureUrl: fakeUrl\n        })\n\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const formData = new FormData();\n        formData.append(\"credits\", this.state.credits)\n        formData.append(\"title\", this.state.title);\n        formData.append(\"description\", this.state.description);\n        formData.append(\"userName\", this.state.userName);\n        formData.append(\"category\", this.state.category);\n        formData.append(\"snippet\", this.state.snippet);\n\n        const files = this.updateRef.current.files;\n\n        if (files) {\n            formData.append(\"picture\", files[0])\n        }\n\n        const id = this.props.match.params.id;\n\n        apiHandler.updateSnippet(id, formData).then(data => {\n            this.setState({\n                ...state,\n                snippetUpdated: true,\n            });\n\n        })\n};\n\n\n    render() {\n        if (this.state.snippetUpdated) {\n            return <Redirect to=\"/profile\" />;\n        }\n\n        return (\n            <div className=\"SnippetForm-container\">\n                <form\n\n                    className=\"SnippetForm\"\n                    onSubmit={this.handleSubmit}>\n                    <h2>Edit snippet</h2>\n                    <img \n                    alt={this.state.title}\n                    src={this.state.tempPictureUrl || this.state.picture} />\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\">\n                            Title\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.title}\n                            name=\"title\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label\n                            className=\"label\"\n                            htmlFor=\"userName\">\n                            User Name\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.userName || \"\"}\n                            placeholder=\"User Name\"\n                            name=\"userName\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"description\">\n                            Description\n            </label>\n                        <textarea\n                            value={this.state.description || \"\"}\n                            onChange={this.handleChange}\n                            name=\"description\"\n                            id=\"description\"\n                            className=\"text-area\"\n                            placeholder=\"Describe your snippet!\"\n                        ></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"category\">\n                            Category\n            </label>\n                        <select\n                            name=\"category\"\n                            id=\"category\"\n                            onChange={this.handleChange}\n                            value={this.state.category}\n                        >\n                            <option value=\"HTML\">HTML</option>\n                            <option value=\"CSS\">CSS</option>\n                            <option value=\"JS\">JS</option>\n                            <option value=\"React\">React</option>\n                            <option value=\"Other\">Other</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"snippet\">\n                            Snippet\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            name=\"snippet\"\n                            onChange={this.handleChange}\n                            value={this.state.snippet || \"\"}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"picture\">\n                            Result\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"file\"\n                            onChange={this.handlePreview}\n                            ref={this.updateRef}\n                            name=\"picture\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\">\n                            Credits\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.credits || \"\"}\n                            placeholder=\"credits\"\n                            name=\"credits\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"creator\">\n                            Creator\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.creator || \"\"}\n                            placeholder=\"Creator\"\n                            name=\"creator\"\n                        />\n                    </div>\n\n                    <button primary>Add Snippet</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withUser(UpdateSnippet);","export function buildFormData(formData, data, parentKey) {\n    if (\n      data &&\n      typeof data === \"object\" &&\n      !(data instanceof Date) &&\n      !(data instanceof File)\n    ) {\n      Object.keys(data).forEach((key) => {\n        buildFormData(\n          formData,\n          data[key],\n          parentKey ? `${parentKey}[${key}]` : key\n        );\n      });\n    } else {\n      const value = data == null ? \"\" : data;\n      formData.append(parentKey, value);\n    }\n  }","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n// import AutoComplete from \"../AutoComplete\";\n// import Button from \"../Button\";\n// import Message from \"../Message\";\nimport withUser from \"../auth/withUser\";\nimport apiHandler from \"../api/apiHandler\";\nimport { buildFormData } from \"../utils/buildFormData\";\n// import FeedBack from \"../FeedBack\";\n// import \"../../styles/ItemForm.css\";\n\nconst initialState = {\n    title: \"\",\n    userName: \"\",\n    description: \"\",\n    category: \"\",\n    snippet: \"\",\n    credits: \"\",\n    snippetAdded: false,\n    httpResponse: null,\n    error: null,\n};\n\nclass SnippetForm extends Component {\n    state = initialState;\n\n    pictureRef = React.createRef();\n\n    handleChange = (event) => {\n\n        const value = event.target.value;\n        const key = event.target.name;\n        this.setState({ [key]: value });\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        const fd = new FormData();\n        const { httpResponse, ...data } = this.state;\n        buildFormData(fd, data);\n\n        fd.append(\"picture\", this.pictureRef.current.files[0]); \n\n\n        apiHandler\n            .addSnippet(fd)\n            .then((data) => {\n                this.setState({\n                    ...initialState,\n                    snippetAdded: true,\n                });\n\n            })\n    };\n\n    render() {\nif (this.state.snippetAdded) {\n    return <Redirect to=\"/profile\" />;\n}\n        return (\n            <div className=\"SnippetForm-container\">\n                <form className=\"SnippetForm\" onSubmit={this.handleSubmit}>\n                    <h2>Add Item</h2>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"title\">\n                            Title\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.title}\n                            placeholder=\"Title\"\n                            name=\"title\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"userName\">\n                            User Name\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.userName}\n                            placeholder=\"User Name\"\n                            name=\"userName\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"description\">\n                            Description\n            </label>\n                        <textarea\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                            name=\"description\"\n                            id=\"description\"\n                            className=\"text-area\"\n                            placeholder=\"Describe your snippet!\"\n                        ></textarea>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"category\">\n                            Category\n            </label>\n                        <select\n                            name=\"category\"\n                            id=\"category\"\n                            onChange={this.handleChange}\n                            value={this.state.category}\n                        >\n                            <option value=\"\" disabled>\n                                Select a category\n              </option>\n                            <option value=\"HTML\">HTML</option>\n                            <option value=\"CSS\">CSS</option>\n                            <option value=\"JS\">JS</option>\n                            <option value=\"React\">React</option>\n                            <option value=\"Other\">Other</option>\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"snippet\">\n                            Snippet\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.snippet}\n                            placeholder=\"Snippet\"\n                            name=\"snippet\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"picture\">\n                            Result image\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"file\"\n\n                            ref={this.pictureRef}\n\n                            name=\"picture\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"label\" htmlFor=\"credits\">\n                            Credits\n            </label>\n                        <input\n                            className=\"input\"\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.credits}\n                            placeholder=\"Give some credits\"\n                            name=\"credits\"\n                        />\n                    </div>\n\n                    <button primary>Add Snippet</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withUser(SnippetForm);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport withUser from \"../auth/withUser\";\nimport apiHandler from \"../api/apiHandler\";\nimport SnippetCard from \"../snippets/SnippetCard\";\nimport UpdateSnippet from \"../snippets/UpdateSnippet\";\nimport AddSnippet from \"./AddSnippet\";\n//import \"../styles/Profile.css\";\n//import \"../styles/form.css\";\n\nclass Profile extends Component {\n    state = {\n        user: null,\n        selectedSnippet: null,\n        userSnippets: [],\n    };\n    componentDidMount() {\n        const promises = Promise.all([\n            apiHandler.getUserInfos(),\n            apiHandler.getUserSnippets(),\n        ]);\n        promises.then((allPromises) => {\n            const userInfos = allPromises[0];\n            const userSnippets = allPromises[1];\n            console.log(allPromises);\n            this.setState({\n                user: userInfos,\n                userSnippets: userSnippets,\n            });\n        });\n    }\n\n\n    deleteSnippet = (snippetId) => {\n        apiHandler.removeSnippet(snippetId).then(() => {\n            const userSnippets = [...this.state.userSnippets].filter(\n                (snippet) => snippet._id !== snippetId\n            );\n            this.setState({ userSnippets });\n        });\n    };\n\n    onSnippetSelect = (snippetId) => {\n        const selectedSnippet = this.state.userSnippets.find(\n            (snippet) => snippet._id === snippetId\n        );\n        this.setState({ selectedSnippet: selectedSnippet });\n    };\n\n    handleSnippetUpdate = (updateSnippet) => {\n        const userSnippets = [...this.state.userSnippets].map((snippet) =>\n            snippet._id === updateSnippet._id ? updateSnippet : snippet\n        );\n        this.setState({ userSnippets });\n    };\n\n    addSnippet = (snippet) => {\n        this.setState({ userSnippets: [...this.state.userSnippets, snippet] });\n    };\n\n\n    render() {\n        const { userSnippets, selectedSnippet, user } = this.state;\n        console.log(\"selectedSnippet\", selectedSnippet);\n        console.log(\"this.state\", this.state);\n        if (!user) return null;\n        return (\n            <section className=\"Profile\">\n                {selectedSnippet && (\n                    <UpdateSnippet\n                        snippet={selectedSnippet}\n                      /*  onSnippetUpdate={this.handleSnippetUpdate} */\n                    />\n                )}\n                {user && this.props.displayForm && (\n                    <AddSnippet\n                        addSnippet={this.addSnippet}\n                    />\n                )}\n                <div className=\"user-picture\">\n                    <img src={user.picture} alt={user.userName} />\n                </div>\n                <div className=\"user-presentation\">\n                    <h2 className=\"title\">\n                        {user.userName}\n                    </h2>\n                    <div>\n                        Linkedin: <a href={user.LinkedIn}>{user.LinkedIn} </a>\n                    </div>\n                    <div>\n                        GitHub: <a href={user.GitHub}> {user.GitHub} </a>\n                    </div>\n                    <Link className=\"link\" to=\"/profile/settings\">\n                        Edit profile\n                    </Link>\n                </div>\n                {!userSnippets.length && (\n                    <React.Fragment>\n                        <div>\n                            <img src=\"/media/personal-page-empty-state.svg\" alt=\"\" />\n                        </div>\n                        <p>You don't have any snippets :(</p>\n                    </React.Fragment>\n                )}\n                {!!userSnippets.length && (\n                    <div className=\"SnippetCard\">\n                        <h3>Your snippets</h3>\n                        {userSnippets.map((snippet, index) => (\n                            <SnippetCard\n                                key={index}\n                                {...snippet}\n                                handleDelete={this.deleteSnippet}\n                            />\n                        ))}\n                    </div>\n                )}\n            </section>\n        );\n    }\n}\nexport default withUser(Profile);","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\nfunction ProtectedRoute({ component: Component, render, ...rest }) {\n    return (\n        <UserContext.Consumer>\n            {(context) => {\n                if (context.isLoading) {\n                    return <div>Loading...</div>;\n                }\n                if (context.isLoggedIn) {\n                    return (\n                        <React.Fragment>\n                            {/* If render prop is used instead of the component prop when calling ProtectedRoute (emulates <Route/> render method.*/}\n                            {render && <Route {...rest} render={render} />}\n                            {!render && <Route {...rest} component={Component} />}\n                        </React.Fragment>\n                    );\n                } else {\n                    return <Redirect to=\"/signin\" />;\n                }\n            }}\n        </UserContext.Consumer>\n    );\n}\n\nexport default ProtectedRoute;","import React from 'react'\n\nconst SnippetDetail = (props) => {\n    const { picture, title, userName, category, description, snippet, credits } =\n        props.snippet;\n\n    return (\n        <div className=\"SnippetDetail\">\n            <div className=\"picture\">\n                <img src={picture} alt={title} />\n            </div>\n            <div className=\"description\">\n                <h2>Title: {title}</h2>\n                <h4>User: {userName}</h4>\n                <h5>Category: {category}</h5>\n                <p>Description: {description}</p>\n                <p>Snippet: {snippet}</p>\n                <p>Credits: {credits}</p>\n            </div>\n        </div>\n    );\n};\n\n\nexport default SnippetDetail","import './App.css';\nimport React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport NavMain from \"./components/NavMain\";\nimport { FormSignup, FormSignin, FormProfile } from './components/Forms';\nimport Profile from './pages/Profile';\nimport ProtectedRoute from './utils/ProtectedRoute';\nimport AddSnippet from './pages/AddSnippet'\nimport UpdateSnippet from './snippets/UpdateSnippet';\nimport SnippetDetail from './snippets/SnippetDetail';\n\n\nclass App extends React.Component {\n  state = {\n    displayForm: false,\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavMain />\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(historyProps) => (\n              <Home\n                {...historyProps}\n                displayForm={this.state.displayForm}\n              />\n            )}\n          />\n\n          <ProtectedRoute\n            exact\n            path=\"/profile\"\n            render={(historyProps) => (\n              <Profile\n                {...historyProps}\n                displayForm={this.state.displayForm}\n              />\n            )}\n          />\n          <ProtectedRoute\n            exact\n            path=\"/add-snippet\"\n            render={(historyProps) => (\n              <AddSnippet\n                {...historyProps}\n                displayForm={this.state.displayForm}\n              />\n            )}\n          />\n\n          <ProtectedRoute exact path=\"/profile/settings\" component={FormProfile} />\n          <ProtectedRoute exact path=\"/update-snippet/:id\" component={UpdateSnippet} />\n\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/snippet/:id\" component={SnippetDetail} />\n          <Route exact path=\"/signup\" component={FormSignup} />\n          <Route exact path=\"/signin\" component={FormSignin} />\n        </Switch>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\nimport apiHandler from \"../api/apiHandler\";\nimport UserContext from \"./UserContext\";\n\nclass UserProvider extends Component {\n  state = {\n    user: null,\n    isLoggedIn: false,\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    apiHandler\n      .isLoggedIn()\n      .then((data) => {\n        this.setState({ user: data, isLoggedIn: true, isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({ user: null, isLoggedIn: false, isLoading: false });\n      });\n  }\n\n  setUser = (user) => {\n    this.setState({ user, isLoggedIn: true });\n  };\n\n  removeUser = () => {\n    this.setState({ user: null, isLoggedIn: false });\n  };\n\n  render() {\n    //  Setup all the values/functions you want to expose to anybody reading\n    // from the AuthContext.\n    const authValues = {\n      user: this.state.user,\n      setUser: this.setUser,\n      removeUser: this.removeUser,\n      isLoggedIn: this.state.isLoggedIn,\n      isLoading: this.state.isLoading,\n    };\n\n    return (\n      <UserContext.Provider value={authValues}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default UserProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport UserProvider from \"./auth/UserProvider\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <UserProvider>\n        <App />\n      </UserProvider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}